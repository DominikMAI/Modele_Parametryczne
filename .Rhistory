model2 <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * GENDER, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * EDUCATION, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * EDUCATION_2, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * OCCUPATION, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * OCCUPATION_2, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
for (c in names(X)) {
cat(c, '\n')
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model_x)
}
for (c in names(X)) {
print(c)
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model_x)
}
for (c in names(X)) {
print(c)
# model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
#summary(model_x)
}
for (c in names(X)) {
print(c)
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
}
for (c in names(X)) {
print(c)
try({
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
})
}
for (c in names(X)) {
print(c)
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
}, print('Error occured for ', c))
}
for (c in names(X)) {
print(c)
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
}, {cat('Error occured for ', c)})
}
for (c in names(X)) {
print(c)
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
}, error={cat('Error occured for ', c)})
}
for (c in names(X)) {
print(c)
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
}, error=function(cond) {cat('Error occured for ', c)})
}
for (c in names(X)) {
print(c)
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK * get(c), data=c(Y,X), family=inverse.gaussian(link="log"))
print(summary(model_x))
}, error=function(cond) {cat('Error occured for ', c, '\n')})
}
model <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model)
plot(model, which=1:7)
model <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model, which=1:6)
# X$EDUCATION_2 <- relevel(as.factor(sapply(as.character(X$EDUCATION), function(x) ifelse(x %in% c('Bachelors', 'Masters', 'PhD'), 'Higher', x))), ref='High School')
X$EDUCATION_2 <- relevel(as.factor(sapply(as.character(X$EDUCATION), function(x) ifelse(x %in% c('Bachelors', 'Masters', 'PhD'), 'Higher', x))), ref='<High School')
model_edu <- glm(CLM_AMT ~ EDUCATION, data=c(Y, X), family=inverse.gaussian(link="log"))
print(summary(model_edu)$coefficients)
cat('AIC: ', model_edu$aic)
cat('\n\n')
model_edu_2 <- glm(CLM_AMT ~ EDUCATION_2, data=c(Y, X), family=inverse.gaussian(link="log"))
print(summary(model_edu_2)$coefficients)
cat('AIC: ', model_edu_2$aic)
cat('\n\n')
# X$EDUCATION_2 <- relevel(as.factor(sapply(as.character(X$EDUCATION), function(x) ifelse(x %in% c('Bachelors', 'Masters', 'PhD'), 'Higher', x))), ref='High School')
X$EDUCATION_2 <- relevel(as.factor(sapply(as.character(X$EDUCATION), function(x) ifelse(x %in% c('Bachelors', 'Masters', 'PhD'), 'Higher', x))), ref='High School')
model_edu <- glm(CLM_AMT ~ EDUCATION, data=c(Y, X), family=inverse.gaussian(link="log"))
print(summary(model_edu)$coefficients)
cat('AIC: ', model_edu$aic)
cat('\n\n')
model_edu_2 <- glm(CLM_AMT ~ EDUCATION_2, data=c(Y, X), family=inverse.gaussian(link="log"))
print(summary(model_edu_2)$coefficients)
cat('AIC: ', model_edu_2$aic)
cat('\n\n')
model2 <- glm(CLM_AMT ~ BLUEBOOK + CAR_USE, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK*CAR_USE, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK *OLDCLAIM, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y, X), family=Gamma(link="log"))
cat(n, '\n')
#print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y, X), family=Gamma(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
model2 <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
plot(model2, which=1:6)
model7 <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model7, which=1:6)
model <- glm(CLM_AMT ~ BLUEBOOK*CAR_USE, data=c(Y,X), family=inverse.gaussian(link="log"))
model <- glm(CLM_AMT ~ BLUEBOOK*CAR_USE, data=c(Y,X), family=inverse.gaussian)
model <- glm(CLM_AMT ~ BLUEBOOK*CAR_USE, data=c(Y,X), family=inverse.gaussian(link="inverse_squared"))
model <- glm(CLM_AMT ~ BLUEBOOK*CAR_USE, data=c(Y,X), family=inverse.gaussian(link="inverse"))
summary(model)
model <- glm(CLM_AMT ~ BLUEBOOK +CAR_USE, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model, which=1:6)
model <- glm(CLM_AMT ~ BLUEBOOK +CAR_USE +MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model, which=1:6)
model <- glm(CLM_AMT ~ BLUEBOOK +CAR_USE +MSTATUS+YOJ, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model, which=1:6)
model <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
plot(model, which=1:6)
model2 <- glm(CLM_AMT ~ BLUEBOOK +CAR_USE, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK +CAR_USE*CAR_TYPE, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
plot(model2, which=1:6)
model2 <- glm(CLM_AMT ~ BLUEBOOK + CAR_USE*GENDER, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + CAR_USE*GENDER, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + MSTATUS*GENDER, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + MSTATUS*AGE, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + REVOKED*MVR, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + REVOKED*MVR_PTS, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + TRAVTIME*MVR_PTS, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + INCOME*YOJ, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + INCOME*TIF, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + INCOME*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + CAR_USE*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + GENDER*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + PARENT1*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + MSTATUS*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + AGE*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + MVR_PTS*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + CAR_AGE*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + OCCUPATION*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + URBANICITY*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
for (c in names(X)) {
for (d in names(X)) {
if (c != d) {
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK + get(c)*get(d), data=c(Y,X), family=inverse.gaussian(link="log"))
print(model_x$aic)
}, error=function(cond) {cat('Error occured for ', c, ' and ', d, '\n')})
}
}
}
model2 <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
for (c in names(X)) {
for (d in names(X)) {
if (c != d) {
tryCatch({
model_x <- glm(CLM_AMT ~ BLUEBOOK + get(c)*get(d), data=c(Y,X), family=inverse.gaussian(link="log"))
cat(model_x$aic, ' ', c, ':', d, '\n')
}, error=function(cond) {cat('Error occured for ', c, ' and ', d, '\n')})
}
}
}
model2 <- glm(CLM_AMT ~ BLUEBOOK * MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * MSTATUS + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
plot(model2, which=1:6)
model2 <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOO:*MSTATUS + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK:*MSTATUS + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK:MSTATUS + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*KIDSDRIV, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*KIDSDRIV*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + PARENT1*CAR_USE, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
plot(model2, which=1:6)
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
plot(model2, which=1:6)
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ*MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK*HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK * MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y,X), family=inverse.gaussian(link="log"), subset=c(-1099, -41,-60))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK , data=c(Y,X), family=inverse.gaussian(link="log"), subset=c(-1099, -41,-60))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"), subset=c(-1099, -41,-60))
summary(model2)
plot(model2, which=1:6)
model2 <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y,X), family=inverse.gaussian(link="log"), subset=c(-1099, -41,-60))
summary(model2)
model2 <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y,X), family=inverse.gaussian(link="log"), subset=c(-1099, -41,-60))
summary(model2)
data_train$excess_claim <- data_train$CLM_AMT - data_train$BLUEBOOK
X <- subset(data_train[data_train$CLAIM_FLAG == TRUE,], select=-c(ID, CLM_AMT, CLAIM_FLAG))
Y <- data_train[data_train$CLAIM_FLAG == TRUE,]['CLM_AMT']
X <- subset(data_train[data_train$CLAIM_FLAG == TRUE,], select=-c(ID, CLM_AMT, CLAIM_FLAG))
Y <- data_train[data_train$CLAIM_FLAG == TRUE,]['excess_claim']
X <- subset(data_train[data_train$CLAIM_FLAG == TRUE,], select=-c(ID, CLM_AMT, CLAIM_FLAG, excess_claim))
Y <- data_train[data_train$CLAIM_FLAG == TRUE,]['excess_claim']
for (n in names(X)) {
model_x <- glm(excess_claim ~ get(n), data=c(Y, X), family=Gamma(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
for (n in names(X)) {
model_x <- glm(excess_claim ~ get(n), data=c(Y, X), link="log")
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
for (n in names(X)) {
model_x <- glm(excess_claim ~ get(n), data=c(Y, X))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
data_2 <- data[data$CLAIM_AMT <= 6000 & data$CLAIM_FLAG == TRUE,]
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
X_2 <- subset(data_train[data_train$CLAIM_FLAG == TRUE,], select=-c(ID, CLM_AMT, CLAIM_FLAG))
Y_2 <- data_train[data_train$CLAIM_FLAG == TRUE,]['CLM_AMT']
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS*CAR_USE, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_AMT ~ BLUEBOOK*CAR_USE, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ INCOME*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK*INCOME, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS + HOME_VAL*CLM_FREQ, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
data_3 <- data
set.seed(1257)
n <- nrow(data_3)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_3 <- data_3[random_nums,]
dane_test_3 <- data_3[-random_nums,]
data_2 <- data[data$CLAIM_AMT <= 6000 & data$CLAIM_FLAG == TRUE,]
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
X_2 <- subset(data_train_2[data_train_2$CLAIM_FLAG == TRUE,], select=-c(ID, CLM_AMT, CLAIM_FLAG))
Y_2 <- data_train_2[data_train_2$CLAIM_FLAG == TRUE,]['CLM_AMT']
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
data_2 <- data[(data$CLAIM_AMT <= 6000) & (data$CLAIM_FLAG == TRUE),]
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
data_2 <- subset(data, (data$CLAIM_AMT <= 6000) & (data$CLAIM_FLAG == TRUE))
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
data_2 <- subset(data, (data$CLAIM_AMT <= 6000) && (data$CLAIM_FLAG == TRUE))
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
data_2 <- subset(data, (CLAIM_AMT <= 6000) & (CLAIM_FLAG == TRUE))
data_2 <- subset(data, (data$CLM_AMT <= 6000) & (data$CLAIM_FLAG == TRUE))
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
data_2 <- subset(data, (data$CLM_AMT <= 7000) & (data$CLAIM_FLAG == TRUE))
set.seed(1257)
n <- nrow(data_2)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_2 <- data_2[random_nums,]
dane_test_2 <- data_2[-random_nums,]
X_2 <- subset(data_train_2[data_train_2$CLAIM_FLAG == TRUE,], select=-c(ID, CLM_AMT, CLAIM_FLAG))
Y_2 <- data_train_2[data_train_2$CLAIM_FLAG == TRUE,]['CLM_AMT']
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
model_x <- glm(CLM_AMT ~ BLUEBOOK + HOME_VAL*CLM_FREQ, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
model_x <- glm(CLM_AMT ~ BLUEBOOK*MSTATUS, data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
data_3 <- subset(data, data$CLAIM_FLAG == TRUE)
data_3$CLM_COEF <- data_3$CLM_AMT / data_3$BLUEBOOK
set.seed(1257)
n <- nrow(data_3)
random_nums <- sample(c(1:n), round(0.7*n), replace = FALSE)
data_train_3 <- data_3[random_nums,]
dane_test_3 <- data_3[-random_nums,]
X_3 <- subset(data_train_3, select=-c(ID, CLM_AMT, CLAIM_FLAG, CLM_COEF))
Y_3 <- data_train['CLM_COEF']
X_3 <- subset(data_train_3, select=-c(ID, CLM_AMT, CLAIM_FLAG, CLM_COEF))
Y_3 <- data_train[,'CLM_COEF']
X_3 <- subset(data_train_3, select=-c(ID, CLM_AMT, CLAIM_FLAG, CLM_COEF))
Y_3 <- data_train_3['CLM_COEF']
for (n in names(X_3)) {
model_x <- glm(CLM_COEF ~ get(n), data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
View(data_train_3)
for (n in names(X_3)) {
model_x <- glm(CLM_COEF ~ get(n), data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
model_x <- glm(CLM_COEF ~ get(n), data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
View(data_train_3)
for (n in names(X)) {
model_x <- glm(CLM_AMT ~ get(n), data=c(Y_2, X_2), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
for (n in names(X_3)) {
model_x <- glm(CLM_COEF ~ get(n), data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
cat(n, '\n')
print(summary(model_x)$coefficients)
cat('AIC: ', model_x$aic)
cat('\n\n')
}
model_x <- glm(CLM_COEF ~ BLUEBOOK + AGE + YOJ + INCOME + HOME_VAL + EDUCATION + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_COEF ~ BLUEBOOK + AGE + YOJ + INCOME + EDUCATION + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_COEF ~ BLUEBOOK + AGE + YOJ + HOME_VAL + EDUCATION + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_COEF ~ BLUEBOOK + AGE + HOME_VAL + EDUCATION + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_COEF ~ BLUEBOOK + HOME_VAL + EDUCATION + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_COEF ~ BLUEBOOK + EDUCATION + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
model_x <- glm(CLM_COEF ~ BLUEBOOK + OCCUPATION + CAR_USE + BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + CAR_TYPE + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + CAR_AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + CAR_TYPE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + CAR_USE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + OCCUPATION, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + EDUCATION, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + AGE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + YOJ, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
for (c in names(X_3)) {
for (d in names(X_3)) {
if (c != d) {
tryCatch({
model_x <- glm(CLM_COEF ~ BLUEBOOK + get(c)*get(d), data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
cat(model_x$aic, ' ', c, ':', d, '\n')
}, error=function(cond) {cat('Error occured for ', c, ' and ', d, '\n')})
}
}
}
model_x <- glm(CLM_COEF ~ BLUEBOOK, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
View(model_yoj)
model_x <- glm(CLM_COEF ~ BLUEBOOK + PARENT1*CAR_TYPE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + PARENT1*HOME_VAL, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + MSTATUS*HOME_VAL, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + CAR_AGE*CAR_TYPE, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + HOME_VAL:PARENT1, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + HOME_VAL*PARENT1, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK*MSTATUS + HOME_VAL*PARENT1, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
for (c in names(X_3)) {
print(c)
tryCatch({
model_x <- glm(CLM_COEF ~ BLUEBOOK * get(c), data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
}, error=function(cond) {cat('Error occured for ', c, '\n')})
}
model_x <- glm(CLM_COEF ~ BLUEBOOK + HOME_VAL*PARENT1, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
plot(model_x)
model_x <- glm(CLM_COEF ~ BLUEBOOK , data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
plot(model_x)
model_x <- glm(CLM_COEF ~ BLUEBOOK + HOME_VAL*PARENT1, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
model_x <- glm(CLM_COEF ~ BLUEBOOK + HOME_VAL*PARENT1, data=c(Y_3, X_3), family=inverse.gaussian(link="log"))
print(summary(model_x))
plot(model_x)
